# This docker-compose file will spin up an ACS cluster on a local host or on a server and it requires a minimum of 12GB Memory to distribute among containers.
# Limit container memory and assign X percentage to JVM.  There are couple of ways to allocate JVM Memory for ACS Containers
# For example: 'JAVA_OPTS: "$JAVA_OPTS -XX:+PrintFlagsFinal -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"'
# See Oracle docs (https://docs.oracle.com/javase/9/gctuning/parallel-collector1.htm#JSGCT-GUID-CAB83393-3438-44ED-98F0-D15641B43C7D).
# If the container memory is not explicitly set then the flags above will set the max heap default to 1/4 of the container's memory, which may not be ideal.
# For performance tuning, assign the container memory and give a percentage of it to the JVM.

# Using version 2 as 3 does not support resource constraint options (cpu_*, mem_* limits) for non swarm mode in Compose
version: "2"

services:
    alfresco:
        image: alfresco/alfresco-content-repository-community:6.2.1-A8
        mem_limit: 1200m
        environment:
            JAVA_OPTS: "
                -Ddb.driver=org.postgresql.Driver
                -Ddb.username=alfresco
                -Ddb.password=alfresco
                -Ddb.url=jdbc:postgresql://postgres:5432/alfresco
                -Dsolr.host=solr6
                -Dsolr.port=8983
                -Dsolr.secureComms=none
                -Dsolr.base.url=/solr
                -Dindex.subsystem.name=solr6
                -Dshare.host=127.0.0.1
                -Dshare.port=8080
                -Dalfresco.host=localhost
                -Dalfresco.port=8080
                -Daos.baseUrlOverwrite=http://localhost:8080/alfresco/aos
                -Dmessaging.broker.url=\"failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true\"
                -Ddeployment.method=DOCKER_COMPOSE

                -DlocalTransform.core-aio.url=http://transform-core-aio:8090/

                -Dalfresco-pdf-renderer.url=http://transform-core-aio:8090/
                -Djodconverter.url=http://transform-core-aio:8090/
                -Dimg.url=http://transform-core-aio:8090/
                -Dtika.url=http://transform-core-aio:8090/
                -Dtransform.misc.url=http://transform-core-aio:8090/

                -Dcsrf.filter.enabled=false
                -Xms1200m -Xmx1200m
                -XX:+UseG1GC
                -XX:MaxGCPauseMillis=200
                "
        depends_on:
            - postgres
            - activemq
        restart: unless-stopped

    transform-core-aio:
        image: alfresco/alfresco-transform-core-aio:2.3.5
        mem_limit: 600m
        environment:
            JAVA_OPTS: " -Xms128m -Xmx350m -XX:+UseG1GC"
        ports:
            - 8090:8090
        restart: unless-stopped

    share:
        image: alfresco/alfresco-share:6.2.1
        mem_limit: 500m
        environment:
            REPO_HOST: "alfresco"
            REPO_PORT: "8080"
            JAVA_OPTS: "
                -Xms200m
                -Xmx350m
                -XX:+UseG1GC
                -Dalfresco.host=localhost
                -Dalfresco.port=8080
                -Dalfresco.context=alfresco
                -Dalfresco.protocol=http
                -Dshare.host=localhost
                -Dshare.port=8080
                "
        depends_on:
            - alfresco
        ports:
            - 8081:8080  # Port separat pentru Share
        restart: unless-stopped

    postgres:
        image: postgres:11.7
        mem_limit: 300m
        environment:
            - POSTGRES_PASSWORD=alfresco
            - POSTGRES_USER=alfresco
            - POSTGRES_DB=alfresco
        command: postgres -c max_connections=200 -c log_min_messages=LOG
        ports:
            - 5432:5432
        restart: unless-stopped
        volumes:
            - postgres_data:/var/lib/postgresql/data

    solr6:
        image: alfresco/alfresco-search-services:2.0.0
        mem_limit: 800m
        environment:
            #Solr needs to know how to register itself with Alfresco
            - SOLR_ALFRESCO_HOST=alfresco
            - SOLR_ALFRESCO_PORT=8080
            #Alfresco needs to know how to call solr
            - SOLR_SOLR_HOST=solr6
            - SOLR_SOLR_PORT=8983
            #Create the default alfresco and archive cores
            - SOLR_CREATE_ALFRESCO_DEFAULTS=alfresco,archive
            #HTTP by default
            - ALFRESCO_SECURE_COMMS=none
            - "SOLR_JAVA_MEM=-Xms512m -Xmx600m"
        ports:
            - 8083:8983 #Browser port
        restart: unless-stopped
        volumes:
            - solr_data:/opt/alfresco-search-services/data

    activemq:
        image: alfresco/alfresco-activemq:5.15.8
        mem_limit: 300m
        ports:
            - 8161:8161 # Web Console
            - 5672:5672 # AMQP
            - 61616:61616 # OpenWire
            - 61613:61613 # STOMP
        restart: unless-stopped

    proxy:
        image: alfresco/acs-community-ngnix:1.0.0
        mem_limit: 128m
        depends_on:
            - alfresco
            - share
        ports:
            - 8080:8080
        environment:
            - ALFRESCO_HOST=alfresco
            - ALFRESCO_PORT=8080
            - SHARE_HOST=share
            - SHARE_PORT=8080
        links:
            - alfresco
            - share
        restart: unless-stopped

volumes:
    postgres_data:
    solr_data: